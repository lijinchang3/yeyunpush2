<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
    <mapper namespace="com.sica.mapper.UserMapper">
        <resultMap id="BaseResultMap" type="com.sica.domain.User">
            <id column="id" property="id" jdbcType="VARCHAR"/>
            <result column="username" property="username" jdbcType="VARCHAR"/>
            <result column="password" property="password" jdbcType="VARCHAR"/>
        </resultMap>
        <resultMap id="queryForListMap" type="com.sica.domain.User">
            <id column="id" property="id" jdbcType="VARCHAR"/>
            <result column="username" property="username" jdbcType="VARCHAR"/>
            <result column="password" property="password" jdbcType="VARCHAR"/>
            <collection property="roles" javaType="java.util.List" ofType="com.sica.domain.Role">
                <id column="r_id" property="id" jdbcType="VARCHAR" />
                <result column="r_name" property="name" jdbcType="VARCHAR" />
                <result column="r_jsms" property="jsms" jdbcType="VARCHAR" />
                <result column="r_bz" property="bz" jdbcType="VARCHAR" />
                <result column="r_jlzt" property="jlzt" jdbcType="INTEGER" />
                <result column="r_glbm" property="glbm" jdbcType="VARCHAR" />
            </collection>
        </resultMap>
        <select id="queryForList" resultMap="queryForListMap">
            SELECT
            u.id,
            u.username,
            u.password,
            r.id r_id,
            r.name r_name,
            r.jsms r_jsms,
            r.bz r_bz,
            r.jlzt r_jlzt,
            r.glbm r_glbm
            FROM
            user u
            LEFT JOIN
            role r
            ON
            u.id = r.userid
        </select>
        <sql id="Base_Column_List">
            id, username, password
        </sql>
        <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
            select
            <include refid="Base_Column_List"/>
            from user
            where id = #{id,jdbcType=VARCHAR}
        </select>
        <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
            delete from user
            where id = #{id,jdbcType=VARCHAR}
        </delete>
        <insert id="insert" parameterType="com.sica.domain.User">
            insert into user (id, username, password
            )
            values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
            )
        </insert>
        <insert id="insertSelective" parameterType="com.sica.domain.User">
            insert into user
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">
                    id,
                </if>
                <if test="username != null">
                    username,
                </if>
                <if test="password != null">
                    password,
                </if>
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">
                    #{id,jdbcType=VARCHAR},
                </if>
                <if test="username != null">
                    #{username,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    #{password,jdbcType=VARCHAR},
                </if>
            </trim>
        </insert>
        <update id="updateByPrimaryKeySelective" parameterType="com.sica.domain.User">
            update user
            <set>
                <if test="username != null">
                    username = #{username,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    password = #{password,jdbcType=VARCHAR},
                </if>
            </set>
            where id = #{id,jdbcType=VARCHAR}
        </update>
        <update id="updateByPrimaryKey" parameterType="com.sica.domain.User">
            update user
            set username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR}
            where id = #{id,jdbcType=VARCHAR}
        </update>
    </mapper>